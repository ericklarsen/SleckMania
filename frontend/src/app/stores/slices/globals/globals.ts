import { createSlice } from "@reduxjs/toolkit";
import { RootState } from "../../store";
import { ChannelsObj } from "../channels/getAll";
import { RoomObj } from "../rooms/getAll";

type InitialState = {
    currentChannel: ChannelsObj;
    currentRoom: RoomObj;
    isSendMessage: boolean;
    isModalAddFormOpen: boolean;
    modalAddFormData: { channel_uid: number };
    modalAddFormEditData: RoomObj;
    errorMsg: string;
};

const initialState: InitialState = {
    errorMsg: "",
    currentChannel: { uid: 0 },
    currentRoom: { uid: 0 },
    isSendMessage: false,
    isModalAddFormOpen: false,
    modalAddFormData: { channel_uid: 0 },
    modalAddFormEditData: { uid: 0 },
};

export const globalsSlice = createSlice({
    name: "globals",
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        setErrorMsg: (state, action) => {
            state.errorMsg = action.payload;
        },
        setCurrentChannel: (state, action) => {
            state.currentChannel = action.payload;
        },
        setCurrentRoom: (state, action) => {
            state.currentRoom = action.payload;
        },
        setIsSendMessage: (state, action) => {
            state.isSendMessage = action.payload;
        },
        setIsModalAddFormOpen: (state, action) => {
            state.isModalAddFormOpen = action.payload;
        },
        setModalAddFormData: (state, action) => {
            state.modalAddFormData = action.payload;
        },
        setModalAddFormEditData: (state, action) => {
            state.modalAddFormEditData = action.payload;
        },
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {},
});

export const {
    setErrorMsg,
    setCurrentChannel,
    setCurrentRoom,
    setIsSendMessage,
    setIsModalAddFormOpen,
    setModalAddFormData,
    setModalAddFormEditData,
} = globalsSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.globals.value)`
export const selectGlobals = (state: RootState) => state.globals;

export default globalsSlice.reducer;
