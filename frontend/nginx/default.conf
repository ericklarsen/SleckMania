proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream frontend_upstream {
    server sleck-fe:3000;

    # we could add additional servers here for load-balancing
}

# upstream backend_upstream {
#     server golden_api:5001;

#     # we could add additional servers here for load-balancing
# }

server {
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;

    listen 80;
    listen [::]:80;

    server_name _;

    server_tokens off;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    location /_next/static {
        proxy_cache STATIC;
        proxy_pass http://frontend_upstream;

        # For testing cache - remove before deploying to production
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    location /static {
        proxy_cache STATIC;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid 60m;
        proxy_pass http://frontend_upstream;

        # For testing cache - remove before deploying to production
        add_header X-Cache-Status $upstream_cache_status;
    }

    location / {
        proxy_pass http://frontend_upstream;
    }

    # ssl_certificate /etc/nginx/certs/cert.crt;
    # ssl_certificate_key /etc/nginx/certs/key.key;
}

# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;

#     listen 80;
#     listen [::]:80;

#     server_name api.goldengarudabali.com;

#     server_tokens off;

#     gzip on;
#     gzip_proxied any;
#     gzip_comp_level 4;
#     gzip_types text/css application/javascript image/svg+xml;

#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;

#     location / {
#         proxy_pass http://backend_upstream;
#     }

#     ssl_certificate /etc/nginx/certs/cert.crt;
#     ssl_certificate_key /etc/nginx/certs/key.key;
# }